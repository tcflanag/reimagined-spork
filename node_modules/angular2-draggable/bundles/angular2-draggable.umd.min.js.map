{"version":3,"file":"angular2-draggable.umd.min.js","sources":["~/angular2-draggable/src/directive/angular-draggable.directive.ts","~/angular2-draggable/src/angular-draggable.module.ts"],"sourcesContent":["import { Directive, ElementRef, Renderer2, Input, Output, OnInit, HostListener, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\n\nexport interface IPosition {\n  x: number;\n  y: number;\n}\nclass Position implements IPosition {\n/**\n * @param {?} x\n * @param {?} y\n */\nconstructor(public x: number,\npublic y: number) { }\n/**\n * @param {?} e\n * @return {?}\n */\nstatic fromEvent(e) {\n    return new Position(e.clientX, e.clientY);\n  }\n/**\n * @param {?} obj\n * @return {?}\n */\nstatic isIPosition(obj): obj is IPosition {\n    return !!obj && ('x' in obj) && ('y' in obj);\n  }\n/**\n * @param {?} p\n * @return {?}\n */\nadd(p: IPosition) {\n    this.x += p.x;\n    this.y += p.y;\n    return this;\n  }\n/**\n * @param {?} p\n * @return {?}\n */\nsubtract(p: IPosition) {\n    this.x -= p.x;\n    this.y -= p.y;\n    return this;\n  }\n/**\n * @return {?}\n */\nreset() {\n    this.x = 0;\n    this.y = 0;\n    return this;\n  }\n/**\n * @param {?} p\n * @return {?}\n */\nset(p: IPosition) {\n    this.x = p.x;\n    this.y = p.y;\n    return this;\n  }\n}\n\nfunction Position_tsickle_Closure_declarations() {\n/** @type {?} */\nPosition.prototype.x;\n/** @type {?} */\nPosition.prototype.y;\n}\n\nexport class AngularDraggableDirective implements OnInit, OnChanges {\nprivate allowDrag = true;\nprivate moving = false;\nprivate orignal: Position = null;\nprivate oldTrans = new Position(0, 0);\nprivate tempTrans = new Position(0, 0);\nprivate oldZIndex = '';\nprivate oldPosition = '';\nprivate _zIndex = '';\nprivate needTransform = false;\n\n   started = new EventEmitter<any>();\n   stopped = new EventEmitter<any>();\n   edge = new EventEmitter<any>();\n/**\n * Make the handle HTMLElement draggable\n */\nhandle: HTMLElement;\n/**\n * Set the bounds HTMLElement\n */\nbounds: HTMLElement;\n/**\n * List of allowed out of bounds edges *\n */\noutOfBounds = {\n    top: false,\n    right: false,\n    bottom: false,\n    left: false\n  };\n/**\n * Set z-index when dragging\n */\nzIndexMoving: string;\n/**\n * Set z-index when not dragging\n * @param {?} setting\n * @return {?}\n */\nset zIndex(setting: string) {\n    this.renderer.setStyle(this.el.nativeElement, 'z-index', setting);\n    this._zIndex = setting;\n  }\n/**\n * Whether to limit the element stay in the bounds\n */\ninBounds = false;\n/**\n * Whether the element should use it's previous drag position on a new drag event.\n */\ntrackPosition = true;\n/**\n * Input css scale transform of element so translations are correct\n */\nscale = 1;\n/**\n * Whether to prevent default event\n */\npreventDefaultEvent = false;\n/**\n * Set initial position by offsets\n */\nposition: IPosition = { x: 0, y: 0 };\n/**\n * Emit position offsets when moving\n */\nmovingOffset = new EventEmitter<IPosition>();\n/**\n * Emit position offsets when put back\n */\nendOffset = new EventEmitter<IPosition>();\n/**\n * @param {?} setting\n * @return {?}\n */\nset ngDraggable(setting: any) {\n    if (setting !== undefined && setting !== null && setting !== '') {\n      this.allowDrag = !!setting;\n\n      let /** @type {?} */ element = this.handle ? this.handle : this.el.nativeElement;\n\n      if (this.allowDrag) {\n        this.renderer.addClass(element, 'ng-draggable');\n      } else {\n        this.renderer.removeClass(element, 'ng-draggable');\n      }\n    }\n  }\n/**\n * @param {?} el\n * @param {?} renderer\n */\nconstructor(private el: ElementRef,\nprivate renderer: Renderer2) { }\n/**\n * @return {?}\n */\nngOnInit() {\n    if (this.allowDrag) {\n      let /** @type {?} */ element = this.handle ? this.handle : this.el.nativeElement;\n      this.renderer.addClass(element, 'ng-draggable');\n    }\n\n    this.resetPosition();\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n    if (changes['position'] && !changes['position'].isFirstChange()) {\n      let /** @type {?} */ p = changes['position'].currentValue;\n\n      if (!this.moving) {\n        if (Position.isIPosition(p)) {\n          this.oldTrans.set(p);\n        } else {\n          this.oldTrans.reset();\n        }\n\n        this.transform();\n      } else {\n        this.needTransform = true;\n      }\n    }\n  }\n/**\n * @return {?}\n */\nresetPosition() {\n    if (Position.isIPosition(this.position)) {\n      this.oldTrans.set(this.position);\n    } else {\n      this.oldTrans.reset();\n    }\n    this.tempTrans.reset();\n    this.transform();\n  }\n/**\n * @param {?} p\n * @return {?}\n */\nprivate moveTo(p: Position) {\n    if (this.orignal) {\n      p.subtract(this.orignal);\n      this.tempTrans.set(p);\n      this.transform();\n\n      if (this.bounds) {\n        this.edge.emit(this.boundsCheck());\n      }\n\n      this.movingOffset.emit({\n        x: this.tempTrans.x + this.oldTrans.x,\n        y: this.tempTrans.y + this.oldTrans.y\n      });\n    }\n  }\n/**\n * @return {?}\n */\nprivate transform() {\n    let /** @type {?} */ value = `translate(${this.tempTrans.x + this.oldTrans.x}px, ${this.tempTrans.y + this.oldTrans.y}px)`;\n\n    if (this.scale !== 1) {\n      value += ` scale(${this.scale})`;\n    }\n\n    this.renderer.setStyle(this.el.nativeElement, 'transform', value);\n    this.renderer.setStyle(this.el.nativeElement, '-webkit-transform', value);\n    this.renderer.setStyle(this.el.nativeElement, '-ms-transform', value);\n    this.renderer.setStyle(this.el.nativeElement, '-moz-transform', value);\n    this.renderer.setStyle(this.el.nativeElement, '-o-transform', value);\n  }\n/**\n * @return {?}\n */\nprivate pickUp() {\n    // get old z-index:\n    this.oldZIndex = this.el.nativeElement.style.zIndex ? this.el.nativeElement.style.zIndex : '';\n\n    if (window) {\n      this.oldZIndex = window.getComputedStyle(this.el.nativeElement, null).getPropertyValue('z-index');\n    }\n\n    if (this.zIndexMoving) {\n      this.renderer.setStyle(this.el.nativeElement, 'z-index', this.zIndexMoving);\n    }\n\n    if (!this.moving) {\n      this.started.emit(this.el.nativeElement);\n      this.moving = true;\n    }\n  }\n/**\n * @return {?}\n */\nprivate boundsCheck() {\n    if (this.bounds) {\n      let /** @type {?} */ boundary = this.bounds.getBoundingClientRect();\n      let /** @type {?} */ elem = this.el.nativeElement.getBoundingClientRect();\n      let /** @type {?} */ result = {\n        'top': this.outOfBounds.top ? true : boundary.top < elem.top,\n        'right': this.outOfBounds.right ? true : boundary.right > elem.right,\n        'bottom': this.outOfBounds.bottom ? true : boundary.bottom > elem.bottom,\n        'left': this.outOfBounds.left ? true : boundary.left < elem.left\n      };\n\n      if (this.inBounds) {\n        if (!result.top) {\n          this.tempTrans.y -= elem.top - boundary.top;\n        }\n\n        if (!result.bottom) {\n          this.tempTrans.y -= elem.bottom - boundary.bottom;\n        }\n\n        if (!result.right) {\n          this.tempTrans.x -= elem.right - boundary.right;\n        }\n\n        if (!result.left) {\n          this.tempTrans.x -= elem.left - boundary.left;\n        }\n\n        this.transform();\n      }\n\n      return result;\n    }\n  }\n/**\n * @return {?}\n */\nprivate putBack() {\n    if (this._zIndex) {\n      this.renderer.setStyle(this.el.nativeElement, 'z-index', this._zIndex);\n    } else if (this.zIndexMoving) {\n      if (this.oldZIndex) {\n        this.renderer.setStyle(this.el.nativeElement, 'z-index', this.oldZIndex);\n      } else {\n        this.el.nativeElement.style.removeProperty('z-index');\n      }\n    }\n\n    if (this.moving) {\n      this.stopped.emit(this.el.nativeElement);\n\n      if (this.needTransform) {\n        if (Position.isIPosition(this.position)) {\n          this.oldTrans.set(this.position);\n        } else {\n          this.oldTrans.reset();\n        }\n\n        this.transform();\n        this.needTransform = false;\n      }\n\n      if (this.bounds) {\n        this.edge.emit(this.boundsCheck());\n      }\n\n      this.moving = false;\n      this.endOffset.emit({\n        x: this.tempTrans.x + this.oldTrans.x,\n        y: this.tempTrans.y + this.oldTrans.y\n      });\n\n      if (this.trackPosition) {\n        this.oldTrans.add(this.tempTrans);\n      }\n\n      this.tempTrans.reset();\n\n      if (!this.trackPosition) {\n        this.transform();\n      }\n    }\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nonMouseDown(event: any) {\n    // 1. skip right click;\n    // 2. if handle is set, the element can only be moved by handle\n    if (event.button === 2 || (this.handle !== undefined && !this.checkHandleTarget(event.target, this.handle))) {\n      return;\n    }\n\n    if (this.preventDefaultEvent) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n\n    this.orignal = Position.fromEvent(event);\n    this.pickUp();\n  }\n/**\n * @param {?} target\n * @param {?} element\n * @return {?}\n */\ncheckHandleTarget(target: Element, element: Element) {\n    // Checks if the target is the element clicked, then checks each child element of element as well\n    // Ignores button clicks\n\n    // Ignore elements of type button\n    if (element.tagName === 'BUTTON') {\n      return false;\n    }\n\n    // If the target was found, return true (handle was found)\n    if (element === target) {\n      return true;\n    }\n\n    // Recursively iterate this elements children\n    for (let /** @type {?} */ child in element.children) {\n      if (element.children.hasOwnProperty(child)) {\n        if (this.checkHandleTarget(target, element.children[child])) {\n          return true;\n        }\n      }\n    }\n\n    // Handle was not found in this lineage\n    // Note: return false is ignore unless it is the parent element\n    return false;\n  }\n/**\n * @return {?}\n */\nonMouseUp() {\n    this.putBack();\n  }\n/**\n * @return {?}\n */\nonMouseLeave() {\n    this.putBack();\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nonMouseMove(event: any) {\n    if (this.moving && this.allowDrag) {\n      if (this.preventDefaultEvent) {\n        event.stopPropagation();\n        event.preventDefault();\n      }\n\n      this.moveTo(Position.fromEvent(event));\n    }\n  }\n/**\n * @return {?}\n */\nonTouchEnd() {\n    this.putBack();\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nonTouchStart(event: any) {\n    if (this.handle !== undefined && !this.checkHandleTarget(event.target, this.handle)) {\n      return;\n    }\n\n    if (this.preventDefaultEvent) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n\n    this.orignal = Position.fromEvent(event.changedTouches[0]);\n    this.pickUp();\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nonTouchMove(event: any) {\n    if (this.moving && this.allowDrag) {\n      if (this.preventDefaultEvent) {\n        event.stopPropagation();\n        event.preventDefault();\n      }\n      this.moveTo(Position.fromEvent(event.changedTouches[0]));\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[ngDraggable]',\n  exportAs: 'ngDraggable'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'started': [{ type: Output },],\n'stopped': [{ type: Output },],\n'edge': [{ type: Output },],\n'handle': [{ type: Input },],\n'bounds': [{ type: Input },],\n'outOfBounds': [{ type: Input },],\n'zIndexMoving': [{ type: Input },],\n'zIndex': [{ type: Input },],\n'inBounds': [{ type: Input },],\n'trackPosition': [{ type: Input },],\n'scale': [{ type: Input },],\n'preventDefaultEvent': [{ type: Input },],\n'position': [{ type: Input },],\n'movingOffset': [{ type: Output },],\n'endOffset': [{ type: Output },],\n'ngDraggable': [{ type: Input },],\n'onMouseDown': [{ type: HostListener, args: ['mousedown', ['$event'], ] },],\n'onMouseUp': [{ type: HostListener, args: ['document:mouseup', ] },],\n'onMouseLeave': [{ type: HostListener, args: ['document:mouseleave', ] },],\n'onMouseMove': [{ type: HostListener, args: ['document:mousemove', ['$event'], ] },],\n'onTouchEnd': [{ type: HostListener, args: ['document:touchend', ] },],\n'onTouchStart': [{ type: HostListener, args: ['touchstart', ['$event'], ] },],\n'onTouchMove': [{ type: HostListener, args: ['document:touchmove', ['$event'], ] },],\n};\n}\n\nfunction AngularDraggableDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nAngularDraggableDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAngularDraggableDirective.ctorParameters;\n/** @type {?} */\nAngularDraggableDirective.propDecorators;\n/** @type {?} */\nAngularDraggableDirective.prototype.allowDrag;\n/** @type {?} */\nAngularDraggableDirective.prototype.moving;\n/** @type {?} */\nAngularDraggableDirective.prototype.orignal;\n/** @type {?} */\nAngularDraggableDirective.prototype.oldTrans;\n/** @type {?} */\nAngularDraggableDirective.prototype.tempTrans;\n/** @type {?} */\nAngularDraggableDirective.prototype.oldZIndex;\n/** @type {?} */\nAngularDraggableDirective.prototype.oldPosition;\n/** @type {?} */\nAngularDraggableDirective.prototype._zIndex;\n/** @type {?} */\nAngularDraggableDirective.prototype.needTransform;\n/** @type {?} */\nAngularDraggableDirective.prototype.started;\n/** @type {?} */\nAngularDraggableDirective.prototype.stopped;\n/** @type {?} */\nAngularDraggableDirective.prototype.edge;\n/**\n * Make the handle HTMLElement draggable\n * @type {?}\n */\nAngularDraggableDirective.prototype.handle;\n/**\n * Set the bounds HTMLElement\n * @type {?}\n */\nAngularDraggableDirective.prototype.bounds;\n/**\n * List of allowed out of bounds edges *\n * @type {?}\n */\nAngularDraggableDirective.prototype.outOfBounds;\n/**\n * Set z-index when dragging\n * @type {?}\n */\nAngularDraggableDirective.prototype.zIndexMoving;\n/**\n * Whether to limit the element stay in the bounds\n * @type {?}\n */\nAngularDraggableDirective.prototype.inBounds;\n/**\n * Whether the element should use it's previous drag position on a new drag event.\n * @type {?}\n */\nAngularDraggableDirective.prototype.trackPosition;\n/**\n * Input css scale transform of element so translations are correct\n * @type {?}\n */\nAngularDraggableDirective.prototype.scale;\n/**\n * Whether to prevent default event\n * @type {?}\n */\nAngularDraggableDirective.prototype.preventDefaultEvent;\n/**\n * Set initial position by offsets\n * @type {?}\n */\nAngularDraggableDirective.prototype.position;\n/**\n * Emit position offsets when moving\n * @type {?}\n */\nAngularDraggableDirective.prototype.movingOffset;\n/**\n * Emit position offsets when put back\n * @type {?}\n */\nAngularDraggableDirective.prototype.endOffset;\n/** @type {?} */\nAngularDraggableDirective.prototype.el;\n/** @type {?} */\nAngularDraggableDirective.prototype.renderer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { AngularDraggableDirective, IPosition } from './directive/angular-draggable.directive';\nexport class AngularDraggableModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [\n    AngularDraggableDirective\n  ],\n  exports: [\n    AngularDraggableDirective\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AngularDraggableModule_tsickle_Closure_declarations() {\n/** @type {?} */\nAngularDraggableModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAngularDraggableModule.ctorParameters;\n}\n\n\nexport { AngularDraggableDirective, IPosition };\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["Position","x","y","this","fromEvent","e","clientX","clientY","isIPosition","obj","prototype","add","p","subtract","reset","set","AngularDraggableDirective","el","renderer","allowDrag","moving","orignal","oldTrans","tempTrans","oldZIndex","oldPosition","_zIndex","needTransform","started","EventEmitter","stopped","edge","outOfBounds","top","right","bottom","left","inBounds","trackPosition","scale","preventDefaultEvent","position","movingOffset","endOffset","Object","defineProperty","setting","setStyle","nativeElement","undefined","element","handle","addClass","removeClass","ngOnInit","resetPosition","ngOnChanges","changes","isFirstChange","currentValue","transform","moveTo","bounds","emit","boundsCheck","value","pickUp","style","zIndex","window","getComputedStyle","getPropertyValue","zIndexMoving","boundary","getBoundingClientRect","elem","result","putBack","removeProperty","onMouseDown","event","button","checkHandleTarget","target","stopPropagation","preventDefault","tagName","child","children","hasOwnProperty","onMouseUp","onMouseLeave","onMouseMove","onTouchEnd","onTouchStart","changedTouches","onTouchMove","decorators","type","Directive","args","selector","exportAs","ctorParameters","ElementRef","Renderer2","propDecorators","Output","Input","ngDraggable","HostListener","AngularDraggableModule","NgModule","declarations","exports"],"mappings":"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"}
