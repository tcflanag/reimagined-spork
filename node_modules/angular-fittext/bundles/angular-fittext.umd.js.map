{"version":3,"file":"angular-fittext.umd.js","sources":["~/angular-fittext/src/angular-fittext.module.ts","~/angular-fittext/src/angular-fittext.directive.ts"],"sourcesContent":["\nimport { NgModule } from '@angular/core';\nimport { AngularFittextDirective } from './angular-fittext.directive';\nexport class AngularFittextModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    declarations: [\n        AngularFittextDirective,\n    ],\n    exports: [\n        AngularFittextDirective,\n    ],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AngularFittextModule_tsickle_Closure_declarations() {\n/** @type {?} */\nAngularFittextModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAngularFittextModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  AfterViewInit,\n  Directive,\n  Renderer2,\n  ElementRef,\n  Input,\n  HostListener,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nexport class AngularFittextDirective implements AfterViewInit, OnInit, OnChanges {\n\n   fittext?= true;\n   compression?= 1;\n   activateOnResize?= true;\n   minFontSize?: number | 'inherit' = 0;\n   maxFontSize?: number | 'inherit' = Number.POSITIVE_INFINITY;\n   delay?= 100;\n   ngModel;\nprivate fittextParent: HTMLElement;\nprivate fittextElement: HTMLElement;\nprivate fittextMinFontSize: number;\nprivate fittextMaxFontSize: number;\nprivate computed: CSSStyleDeclaration;\nprivate newlines: number;\nprivate lineHeight: string;\nprivate display: string;\nprivate calcSize = 10;\nprivate resizeTimeout: number;\n/**\n * @param {?} el\n * @param {?} renderer\n */\nconstructor(\nprivate el: ElementRef,\nprivate renderer: Renderer2,\n  ) {\n    this.fittextElement = el.nativeElement;\n    this.fittextParent = this.fittextElement.parentElement;\n    this.computed = window.getComputedStyle(this.fittextElement);\n    this.newlines = this.fittextElement.childElementCount > 0 ? this.fittextElement.childElementCount : 1;\n    this.lineHeight = this.computed['line-height'];\n    this.display = this.computed['display'];\n  }\npublic onWindowResize = (): void => {\n    if (this.activateOnResize) {\n      this.setFontSize();\n    }\n  }\n/**\n * @return {?}\n */\npublic ngOnInit() {\n    this.fittextMinFontSize = this.minFontSize === 'inherit' ? this.computed['font-size'] : this.minFontSize;\n    this.fittextMaxFontSize = this.maxFontSize === 'inherit' ? this.computed['font-size'] : this.maxFontSize;\n  }\n/**\n * @return {?}\n */\npublic ngAfterViewInit() {\n    this.setFontSize();\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\npublic ngOnChanges(changes: SimpleChanges) {\n    if (changes['compression'] && !changes['compression'].firstChange) {\n      this.setFontSize();\n    }\n    if (changes['ngModel']) {\n      this.fittextElement.innerHTML = this.ngModel;\n      this.setFontSize();\n    }\n  }\nprivate setFontSize = (): void => {\n    this.resizeTimeout = setTimeout(\n      (() => {\n        if (this.fittextElement.offsetHeight * this.fittextElement.offsetWidth !== 0) {\n          // reset to default\n          this.setStyles(this.calcSize, 1, 'inline-block');\n          // set new\n          this.setStyles(this.calculateNewFontSize(), this.lineHeight, this.display);\n        }\n      }).bind(this),\n      this.delay\n    );\n  }\nprivate calculateNewFontSize = (): number => {\n    const /** @type {?} */ ratio = (this.calcSize * this.newlines) / this.fittextElement.offsetWidth / this.newlines;\n\n    return Math.max(\n      Math.min(\n        (this.fittextParent.offsetWidth -\n          (parseFloat(getComputedStyle(this.fittextParent).paddingLeft) +\n            parseFloat(getComputedStyle(this.fittextParent).paddingRight)) -\n          6) *\n        ratio *\n        this.compression,\n        this.fittextMaxFontSize\n      ),\n      this.fittextMinFontSize\n    );\n  }\nprivate setStyles = (fontSize: number, lineHeight: number | string, display: string): void => {\n    this.renderer.setStyle(this.fittextElement, 'fontSize', fontSize.toString() + 'px');\n    this.renderer.setStyle(this.fittextElement, 'lineHeight', lineHeight.toString());\n    this.renderer.setStyle(this.fittextElement, 'display', display);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[fittext]',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'fittext': [{ type: Input },],\n'compression': [{ type: Input },],\n'activateOnResize': [{ type: Input },],\n'minFontSize': [{ type: Input },],\n'maxFontSize': [{ type: Input },],\n'delay': [{ type: Input },],\n'ngModel': [{ type: Input },],\n'onWindowResize': [{ type: HostListener, args: ['window:resize', ] },],\n};\n}\n\nfunction AngularFittextDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nAngularFittextDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAngularFittextDirective.ctorParameters;\n/** @type {?} */\nAngularFittextDirective.propDecorators;\n/** @type {?} */\nAngularFittextDirective.prototype.fittext;\n/** @type {?} */\nAngularFittextDirective.prototype.compression;\n/** @type {?} */\nAngularFittextDirective.prototype.activateOnResize;\n/** @type {?} */\nAngularFittextDirective.prototype.minFontSize;\n/** @type {?} */\nAngularFittextDirective.prototype.maxFontSize;\n/** @type {?} */\nAngularFittextDirective.prototype.delay;\n/** @type {?} */\nAngularFittextDirective.prototype.ngModel;\n/** @type {?} */\nAngularFittextDirective.prototype.fittextParent;\n/** @type {?} */\nAngularFittextDirective.prototype.fittextElement;\n/** @type {?} */\nAngularFittextDirective.prototype.fittextMinFontSize;\n/** @type {?} */\nAngularFittextDirective.prototype.fittextMaxFontSize;\n/** @type {?} */\nAngularFittextDirective.prototype.computed;\n/** @type {?} */\nAngularFittextDirective.prototype.newlines;\n/** @type {?} */\nAngularFittextDirective.prototype.lineHeight;\n/** @type {?} */\nAngularFittextDirective.prototype.display;\n/** @type {?} */\nAngularFittextDirective.prototype.calcSize;\n/** @type {?} */\nAngularFittextDirective.prototype.resizeTimeout;\n/** @type {?} */\nAngularFittextDirective.prototype.onWindowResize;\n/** @type {?} */\nAngularFittextDirective.prototype.setFontSize;\n/** @type {?} */\nAngularFittextDirective.prototype.calculateNewFontSize;\n/** @type {?} */\nAngularFittextDirective.prototype.setStyles;\n/** @type {?} */\nAngularFittextDirective.prototype.el;\n/** @type {?} */\nAngularFittextDirective.prototype.renderer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["NgModule","HostListener","Input","Renderer2","ElementRef","Directive"],"mappings":"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"}
